[BUSCA]

=========================

Encadeamento separado:
Para a inserção de 1009 números inteiros, após 10 execuções diferentes inserindo os mesmos elementos
a estratégia de tratamento de colisão por encadeamento separado resultou em

->	Tempo médio-aritmético de execução: (0.000081)s

[1]ª execução: (0.000139)s
[2]ª execução: (0.000108)s
[3]ª execução: (0.000089)s
[4]ª execução: (0.000078)s
[5]ª execução: (0.000078)s
[6]ª execução: (0.000074)s
[7]ª execução: (0.000068)s
[8]ª execução: (0.000056)s
[9]ª execução: (0.000064)s
[10]ª execução: (0.000055)s

=========================

Encadeamento separado (com árvores binárias):
Para a inserção de 1009 números inteiros, após 10 execuções diferentes inserindo os mesmos elementos
a estratégia de tratamento de colisão por encadeamento separado com árvores binárias resultou em

->	Tempo médio-aritmético de execução: (0.000073)s

[1]ª execução: (0.000105)s
[2]ª execução: (0.000083)s
[3]ª execução: (0.000079)s
[4]ª execução: (0.000070)s
[5]ª execução: (0.000068)s
[6]ª execução: (0.000066)s
[7]ª execução: (0.000066)s
[8]ª execução: (0.000065)s
[9]ª execução: (0.000065)s
[10]ª execução: (0.000066)s

=========================

Sondagem linear:
Para a inserção de 1009 números inteiros, após 10 execuções diferentes inserindo os mesmos elementos
a estratégia de tratamento de colisão por sondagem linear resultou em

->	Tempo médio-aritmético de execução: (0.010936)s

[1]ª execução: (0.017354)s
[2]ª execução: (0.013723)s
[3]ª execução: (0.011776)s
[4]ª execução: (0.010447)s
[5]ª execução: (0.009372)s
[6]ª execução: (0.009437)s
[7]ª execução: (0.009691)s
[8]ª execução: (0.008973)s
[9]ª execução: (0.009715)s
[10]ª execução: (0.008874)s

=========================

Sondagem quadrática:
Para a inserção de 1009 números inteiros, após 10 execuções diferentes inserindo os mesmos elementos
a estratégia de tratamento de colisão por sondagem quadrática resultou em

->	Tempo médio-aritmético de execução: (0.000191)s

[1]ª execução: (0.000192)s
[2]ª execução: (0.000178)s
[3]ª execução: (0.000176)s
[4]ª execução: (0.000176)s
[5]ª execução: (0.000175)s
[6]ª execução: (0.000196)s
[7]ª execução: (0.000227)s
[8]ª execução: (0.000181)s
[9]ª execução: (0.000206)s
[10]ª execução: (0.000208)s

=========================

Hash duplo:
Para a inserção de 1009 números inteiros, após 10 execuções diferentes inserindo os mesmos elementos
a estratégia de tratamento de colisão por hash duplo resultou em

->	Tempo médio-aritmético de execução: (0.000204)s

[1]ª execução: (0.000202)s
[2]ª execução: (0.000259)s
[3]ª execução: (0.000209)s
[4]ª execução: (0.000191)s
[5]ª execução: (0.000183)s
[6]ª execução: (0.000184)s
[7]ª execução: (0.000203)s
[8]ª execução: (0.000189)s
[9]ª execução: (0.000176)s
[10]ª execução: (0.000248)s
