[REMOÇÃO]

=========================

Encadeamento separado:
Para a inserção de 1009 números inteiros, após 10 execuções diferentes inserindo os mesmos elementos
a estratégia de tratamento de colisão por encadeamento separado resultou em

->	Tempo médio-aritmético de execução: (0.000044)s

[1]ª execução: (0.000088)s
[2]ª execução: (0.000042)s
[3]ª execução: (0.000038)s
[4]ª execução: (0.000038)s
[5]ª execução: (0.000038)s
[6]ª execução: (0.000038)s
[7]ª execução: (0.000040)s
[8]ª execução: (0.000041)s
[9]ª execução: (0.000039)s
[10]ª execução: (0.000039)s

=========================

Encadeamento separado com árvores binárias:
Para a inserção de 1009 números inteiros, após 10 execuções diferentes inserindo os mesmos elementos
a estratégia de tratamento de colisão por encadeamento separado com árvores binárias resultou em

->	Tempo médio-aritmético de execução: (0.000045)s

[1]ª execução: (0.000055)s
[2]ª execução: (0.000048)s
[3]ª execução: (0.000041)s
[4]ª execução: (0.000055)s
[5]ª execução: (0.000039)s
[6]ª execução: (0.000052)s
[7]ª execução: (0.000037)s
[8]ª execução: (0.000040)s
[9]ª execução: (0.000042)s
[10]ª execução: (0.000038)s

=========================

Sondagem linear:
Para a inserção de 1009 números inteiros, após 10 execuções diferentes inserindo os mesmos elementos
a estratégia de tratamento de colisão por sondagem linear resultou em

->	Tempo médio-aritmético de execução: (0.000309)s

[1]ª execução: (0.000393)s
[2]ª execução: (0.000316)s
[3]ª execução: (0.000272)s
[4]ª execução: (0.000323)s
[5]ª execução: (0.000336)s
[6]ª execução: (0.000310)s
[7]ª execução: (0.000267)s
[8]ª execução: (0.000307)s
[9]ª execução: (0.000295)s
[10]ª execução: (0.000268)s

=========================

Sondagem quadrática:
Para a inserção de 1009 números inteiros, após 10 execuções diferentes inserindo os mesmos elementos
a estratégia de tratamento de colisão por sondagem quadrática resultou em

->	Tempo médio-aritmético de execução: (0.000206)s

[1]ª execução: (0.000219)s
[2]ª execução: (0.000251)s
[3]ª execução: (0.000217)s
[4]ª execução: (0.000219)s
[5]ª execução: (0.000217)s
[6]ª execução: (0.000185)s
[7]ª execução: (0.000184)s
[8]ª execução: (0.000185)s
[9]ª execução: (0.000185)s
[10]ª execução: (0.000199)s

=========================

Hash duplo:
Para a inserção de 1009 números inteiros, após 10 execuções diferentes inserindo os mesmos elementos
a estratégia de tratamento de colisão por hash duplo resultou em

->	Tempo médio-aritmético de execução: (0.000212)s

[1]ª execução: (0.000178)s
[2]ª execução: (0.000178)s
[3]ª execução: (0.000208)s
[4]ª execução: (0.000230)s
[5]ª execução: (0.000200)s
[6]ª execução: (0.000217)s
[7]ª execução: (0.000196)s
[8]ª execução: (0.000213)s
[9]ª execução: (0.000281)s
[10]ª execução: (0.000218)s
